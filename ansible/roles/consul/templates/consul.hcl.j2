#При первой раскатке - stat,если encrypt пустая и если файла не существует -> генерация ключа и записываю в файл, читаю из файла √
#Посмотреть в роле кубера
data_dir="{{ consul.storage.data }}"
connect {
  enabled=true
}
ports {
  grpc = {{ consul.config.port.grpc }}
  grpc_tls = {{ consul.config.port.grpc_tls }}
}
server=true
#retry_join=["consul-server-n1:{{ consul.config.port.serf }}","consul-server-n2:{{ consul.config.port.serf }}","consul-server-n3:{{ consul.config.port.serf }}"],
retry_join=[{% for server in consul.servers %}"{{server}}:{{consul.config.port.serf}}",{% endfor %}],
#bootstrap_expect=3
bootstrap_expect={{ consul.servers | length }}
ui_config {
  enabled = true
}
log_level = "debug"
log_file = "{{ consul.storage.log }}/consul.log"
{% if consulGossipKey %}
encrypt = "{{consulGossipKey}}"
{% endif %}
client_addr = "127.0.0.1 {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
bind_addr = "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
auto_encrypt {
  allow_tls = true
}
tls{
  defaults{
    ca_file = "{{ consul.storage.ssl }}/consul-agent-ca.pem"
    cert_file = "{{ consul.storage.ssl }}/dc1-server-consul-0.pem"
    key_file = "{{ consul.storage.ssl }}/dc1-server-consul-0-key.pem"
    verify_incoming = true
    verify_outgoing = true
  }
  internal_rpc{
   verify_server_hostname = true
  }
}